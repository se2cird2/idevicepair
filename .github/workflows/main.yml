# .github/workflows/main.yml
name: idevicepair gui build

on:
  push:
    branches: [main]

env:
  BINARY_NAME: pair
  VERSION: 1.0.0
  ICON_PNG: icons/idevicepair.png

jobs:
  build-appimage:
    name: Build AppImage for ${{ matrix.arch }}
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - arch: x86_64
            runner: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            toolfile: appimagetool-x86_64.AppImage
          - arch: aarch64
            runner: ubuntu-22.04-arm
            target: aarch64-unknown-linux-gnu
            toolfile: appimagetool-aarch64.AppImage

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt, clippy
          target: ${{ matrix.target }}

      - name: Install FUSE & AppStream
        run: |
          sudo apt-get update
          sudo apt-get install -y libfuse2 appstream

      - name: Build native binary
        run: |
          cargo build --release --bin ${{ env.BINARY_NAME }} \
            --target ${{ matrix.target }}

      - name: Download appimagetool
        run: |
          wget -c https://github.com/AppImage/AppImageKit/releases/download/continuous/${{ matrix.toolfile }} \
            -O appimagetool.AppImage
          chmod +x appimagetool.AppImage

      - name: Prepare AppDir
        run: |
          mkdir -p AppDir/usr/bin
          cp target/${{ matrix.target }}/release/${{ env.BINARY_NAME }} AppDir/usr/bin/

          ICON_NAME=${ICON_PNG##*/}
          ICON_BASENAME=${ICON_NAME%.*}

          # Copy the icon and produce a desktop file that omits the extension
          cp ${{ env.ICON_PNG }} AppDir/$ICON_NAME
          cat > AppDir/${{ env.BINARY_NAME }}.desktop <<EOF
          [Desktop Entry]
          Type=Application
          Name=iDevicePair
          Exec=${{ env.BINARY_NAME }}
          Icon=$ICON_BASENAME
          Categories=Utility;
          EOF

          # Place the PNG in the hicolor theme for lookup
          mkdir -p AppDir/usr/share/icons/hicolor/256x256/apps
          cp ${{ env.ICON_PNG }} AppDir/usr/share/icons/hicolor/256x256/apps/${ICON_BASENAME}.png

      - name: Build AppImage
        run: |
          ./appimagetool.AppImage AppDir iDevicePair-${{ env.VERSION }}-${{ matrix.arch }}.AppImage

      - name: Upload AppImage
        uses: actions/upload-artifact@v4
        with:
          name: iDevicePair-${{ env.VERSION }}-${{ matrix.arch }}.AppImage
          path: iDevicePair-${{ env.VERSION }}-${{ matrix.arch }}.AppImage
