name: CI

on:
  push:
    branches: [ main ]

env:
  BINARY_NAME: pair

jobs:
  # 1) Linux (Ubuntu x86_64)
  build-linux-x64:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust
        run: |
          curl https://sh.rustup.rs -sSf | sh -s -- -y
          source $HOME/.cargo/env
      - name: Build Linux x86_64
        run: cargo build --release --bin pair
      - name: Upload Linux x86_64
        uses: actions/upload-artifact@v4
        with:
          name: linux-x86_64
          path: target/release/pair

  # 2) macOS (universal)
  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust
        run: |
          curl https://sh.rustup.rs -sSf | sh -s -- -y
          source $HOME/.cargo/env
      - name: Build x86_64 slice
        run: cargo build --release --bin pair --target x86_64-apple-darwin
      - name: Build ARM64 slice
        run: cargo build --release --bin pair --target aarch64-apple-darwin
      - name: Create universal binary
        run: |
          mkdir -p target/universal/release
          lipo \
            target/x86_64-apple-darwin/release/pair \
            target/aarch64-apple-darwin/release/pair \
            -create -output target/universal/release/pair
      - name: Upload macOS universal
        uses: actions/upload-artifact@v4
        with:
          name: macos-universal
          path: target/universal/release/pair

  # 3) Windows (native MSVC)
  build-windows:
    name: Build Windows (MSVC)
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust (MSVC toolchain)
        run: |
          curl https://sh.rustup.rs -sSf | sh -s -- -y
          refreshenv
      - name: Build Windows executable
        run: cargo build --release --bin pair
      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-msvc
          path: target/release/pair.exe
