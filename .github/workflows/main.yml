# .github/workflows/main.yml
name: idevicepair gui build

on:
  push:
    branches: ["main"]

env:
  BINARY_NAME: pair
  VERSION: 1.0.0
  ICON_PNG: icons/idevicepair.png

jobs:
  build-linux-x64:
    name: Build AppImage for x86_64
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt, clippy
          target: x86_64-unknown-linux-gnu

      - name: Install FUSE & AppStream dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libfuse2 appstream

      - name: Build x86_64 binary
        run: |
          cargo build --release --bin ${{ env.BINARY_NAME }} \
            --target x86_64-unknown-linux-gnu

      - name: Create AppImage (x86_64)
        uses: AppImageCrafters/build-appimage-action@v1
        with:
          recipe: .github/appimage-builder.yml
        env:
          UPDATE_INFO: gh-releases-zsync|${{ github.repository_owner }}|${{ github.repository }}|latest|*.AppImage.zsync

      - name: Upload x86_64 AppImage
        uses: actions/upload-artifact@v4
        with:
          name: iDevicePair-${{ env.VERSION }}-x86_64.AppImage
          path: "*.AppImage"

  build-linux-arm64:
    name: Build AppImage for ARM64
    runs-on: ubuntu-22.04-arm
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt, clippy
          target: aarch64-unknown-linux-gnu

      - name: Install FUSE & AppStream dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libfuse2 appstream

      - name: Build ARM64 binary
        run: |
          cargo build --release --bin ${{ env.BINARY_NAME }} \
            --target aarch64-unknown-linux-gnu

      - name: Create AppImage (ARM64)
        uses: AppImageCrafters/build-appimage-action@v1
        with:
          recipe: .github/appimage-builder.yml
        env:
          UPDATE_INFO: gh-releases-zsync|${{ github.repository_owner }}|${{ github.repository }}|latest|*.AppImage.zsync

      - name: Upload ARM64 AppImage
        uses: actions/upload-artifact@v4
        with:
          name: iDevicePair-${{ env.VERSION }}-aarch64.AppImage
          path: "*.AppImage"
