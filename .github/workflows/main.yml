name: CI

on:
  push:
    branches: [ main ]

env:
  BINARY_NAME: your_binary_name
  PACKAGE_NAME: idevicepair

jobs:
  build:
    runs-on: macos-latest
    strategy:
      matrix:
        include:
          # Linux static builds via Zig
          - target: x86_64-unknown-linux-gnu
            tool: zig
          - target: aarch64-unknown-linux-gnu
            tool: zig

          # macOS builds (arch-specific)
          - target: x86_64-apple-darwin
            tool: native
          - target: aarch64-apple-darwin
            tool: native

          # Windows GNU cross-compile
          - target: x86_64-pc-windows-gnu
            tool: mingw

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Uninstall Homebrew rustup
        run: brew uninstall rustup rustup-init || true

      - name: Install Rust & Add Target
        run: |
          curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain stable
          source $HOME/.cargo/env
          rustup component add rustfmt clippy
          rustup target add ${{ matrix.target }}

      - name: Install Tools
        run: |
          brew install zig
          brew install mingw-w64
          cargo install cargo-zigbuild

      - name: Compile ${{ matrix.target }}
        run: |
          if [[ "${{ matrix.tool }}" == "zig" ]]; then
            cargo zigbuild --release --package $PACKAGE_NAME --target ${{ matrix.target }}
          else
            cargo build    --release --package $PACKAGE_NAME --target ${{ matrix.target }}
          fi

  upload:
    needs: build
    runs-on: macos-latest
    steps:
      - name: Upload all builds
        uses: actions/upload-artifact@v4
        with:
          name: all-binaries
          path: |
            **/release/${{ env.BINARY_NAME }}*
